.collection-wrapper {
  border: 1px solid $table-border-color;
  display: inline-block;
  width: 100%;

  .flex-space {
    width: 1rem;
  }

  &.fill-content {
    width: 100%;
  }

  &.table-fullscreen {
    position: absolute;
    top: 0;
    left: 0;
    z-index: $z-index-modal;

    width: 100vw;
    max-width: 100vw;
    min-height: 100vh;
    padding: 35px;

    background: #FFF;

    border: none;

    .close-fullscreen {
      float: right;
      display: flex;
      cursor: pointer;

      &:hover {
        color: darken($body-color, 20%);

        .isvg svg {
          fill: darken(#393B47, 10%);
        }
      }

      .isvg svg {
        margin-left: 5px;
        width: 25px;
        height: 25px;
      }
    }
  }

  table {
    margin-bottom: 0;
  }

  // React Table style overrides
   .ReactTable .rt-td {
    white-space: normal !important;
    padding: 20px !important;
    display: flex;
    align-items: center;
    background-color: inherit !important;
  }

  .ReactTable .rt-resizable-header-content {
    text-align: left;
    text-transform: uppercase;
    padding: 10px;
    color: #191f2a;
    font-weight: 400;
    font-size: 0.9em;
    letter-spacing: .05em;
    white-space: nowrap;
    text-decoration: underline;
  }

  .row-color-white {
    background-color: white;
    &.-even {
      background: #F6F7F8 !important;
    }
  }

  .row-color-success {
    background-color: rgba(map-get($theme-colors, "success"), 0.1) !important;
  }
  .row-color-primary {
    background-color: rgba(map-get($theme-colors, "primary"), 0.1) !important;
  }
  .row-color-warning {
    background-color: rgba(map-get($theme-colors, "warning"), 0.1) !important;
  }
  .row-color-danger {
    background-color: rgba(map-get($theme-colors, "danger"), 0.1) !important;
  }

  .link-title {
    text-decoration: underline;
    box-shadow: none !important;
  }

  .table-scrollbar-container {
    height: 12px;
    overflow-x: scroll;
    overflow-y: hidden;
    /* Adapted from https://gist.github.com/devinrhode2/2573411 */
    /* Turn on custom 8px wide scrollbar */
    &::-webkit-scrollbar {
      width: 12px; /* 1px wider than Lion. */
      height: 12px; /* 1px wider than Lion. */
      /* This is more usable for users trying to click it. */
      background-color: rgba(0, 0, 0, 0.09);
    }
    /* The scrollbar 'thumb' ...that marque oval shape in a scrollbar */
    &::-webkit-scrollbar-thumb:horizontal {
      /* This is the EXACT color of Mac OS scrollbars.
      Yes, I pulled out digital color meter */
      background: rgba(0,0,0,0.5);
      -webkit-border-radius: 100px;
      background-clip: padding-box;
      border: 2px solid rgba(0, 0, 0, 0);
      min-height: 10px; /*Prevent it from getting too small */
    }
    &::-webkit-scrollbar-thumb:horizontal:active {
      background: rgba(0,0,0,0.61); /* Some darker color when you click it */
      -webkit-border-radius: 100px;
    }
  }

  .table-scrollbar-dummy {
    background-color: white;
    height: 12px;
  }
}

.ReactTable .rt-thead.-filters input[type="checkbox"] {
  padding: 0;
}
.ReactTable .rt-thead.-filters .rt-th {
  margin-top: auto;
}


.table-config {
  padding: .5em 1em .25em;
}

.table-wrapper {
  display: flex;
  flex-flow: row nowrap;
  position: relative;

  .table-flex-wrapper {
    display: flex;
    flex-flow: row nowrap;
  }

  .left-table::after {
    // We can't just use a box shadow here because it will spill out over the
    // sides and would get covered up by the floating header.
    position: absolute;
    right: 0;
    top: 0;

    width: 20px;
    height: 100%;
    z-index: $z-index-table-shadow;
    margin-right: -20px;

    background: linear-gradient(90deg, rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0));

    content: "";
  }

  .left-table {
    z-index: $z-index-left-table;

    position: absolute;
    left: 0;
    top: 0;
  }

  .right-table {
    overflow-x: auto;

    width: 100%;

    &> table {
      min-width: 100%;
    }
  }
}

.table--unstyled-lists {
  table {
    ol, ul {
      margin: 0;
      padding: 0;
      list-style-type: none;
    }
  }
}

.table-inline {
  background: #FFF;
}

table {
  font-size: 0.9em;
  width: 100%;

  td, th {
    padding: 1em 1.3em;
  }

  th {
    color: $header-color;
    font-weight: $font-weight-medium;
    font-size: 0.9em;
    letter-spacing: .05em;
    text-transform: uppercase;
    white-space: nowrap;
    outline: none;

    sup {
      text-transform: lowercase;
    }
  }


  // Show inner border; hide outer borders
  border-collapse: collapse;

  td, th {
    border: 0;
    max-width: 600px;
    word-wrap: break-word;
  }

  tbody tr:nth-child(even) {
    background-color: $table-zebra-color;
  }

  thead tr {
    border-bottom: 1px solid $table-border-color;
    background-color: white;
    z-index: 1;
  }

  tbody tr {
    background-color: #FFFFFF;

    &.row-color-success,
    &.row-color-primary,
    &.row-color-warning,
    &.row-color-danger {
      border-top: 1px solid $table-border-color;
    }

    &.row-color-success {
      background-color: rgba(map-get($theme-colors, "success"), 0.1);
    }
    &.row-color-primary {
      background-color: rgba(map-get($theme-colors, "primary"), 0.1);
    }
    &.row-color-warning {
      background-color: rgba(map-get($theme-colors, "warning"), 0.1);
    }
    &.row-color-danger {
      background-color: rgba(map-get($theme-colors, "danger"), 0.1);
    }
  }

  tr:first-child th {
    border-top: 0;
  }

  tr:last-child td {
    border-bottom: 0;
  }

  tr td:first-child,
  tr th:first-child {
    border-left: 0;
  }

  tr td:last-child,
  tr th:last-child {
    border-right: 0;
  }

  // Show sort arrow beside sortable column headers
  th.header-sortable {
    &::after {
      content: "â—€";
      font-size: 0.9em;
      margin: 0 0.4em;
      display: inline-block;
      transform: rotate(270deg);
      opacity: 0.2;
    }

    &:hover::after {
      transition: opacity 0.2s;
      opacity: 0.5;
    }

    &.sort-asc::after,
    &.sort-desc::after {
      opacity: 1.0;
    }

    &.sort-desc::after {
      transform: rotate(90deg);
    }

    a {
      box-shadow: none;
      cursor: pointer;
    }
  }

  td.show-empty:empty::after {
    content: "None";
    color: $lightest-text-color;
  }

  &.hide-last-column {
    th:nth-last-child(2),
    td:nth-last-child(2) {
      border-right: none;
    }

    th:last-child,
    td:last-child {
      border-left: none;
    }
  }
}

table.table--plain {
  tbody tr:nth-child(even) {
    background-color: inherit;
  }

  thead tr {
    border-bottom: 0;
    background-color: inherit;
    z-index: 1;
  }

  tbody tr {
    background-color: inherit;

    &.row-color-success,
    &.row-color-primary,
    &.row-color-warning,
    &.row-color-danger {
      border-top: 0;
    }
  }

  td {
    border-top: 0;
  }
}

table.table--nonFluid {
  width: auto !important;
}


td[label="Characteristics"] {
  min-width: 600px;
}

td[label="Association"] {
  min-width: 400px;
}

// Used in some HTML provided by the API.
table.zebra {
  th {
    background-color: #e2e2e2;
  }

  td {
    background-color: #ededed;
  }

  tr:hover td {
    background-color: #eaeaf8;
  }
}

.table-header-text {
  margin-right: 10px;
}

table.unstriped tbody tr {
  background-color: inherit;
}
